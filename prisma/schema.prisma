// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String   @id @default(cuid())
  username String   @unique
  email    String   @unique
  password String
  tasks    Task[]
  boards   Boards[]
}

model Task {
  id          Int      @id @default(autoincrement())
  title       String
  urlName     String
  description String
  priority    String?
  tag         String?
  isComleted  Boolean? @default(false)
  isPinned    Boolean  @default(false)
  author      User     @relation(fields: [authorId], references: [id])
  authorId    String
  board       Boards   @relation(fields: [boardId], references: [id])
  boardId     Int
  createdAt   DateTime @default(now())
  column      Columns? @relation(fields: [columnId], references: [id])
  columnId    Int?
}

model Boards {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  urlName  String
  Task     Task[]
  author   User      @relation(fields: [authorId], references: [id])
  authorId String
  columns  Columns[]
}

model Columns {
  id      Int    @id @default(autoincrement())
  name    String @unique
  Task    Task[]
  board   Boards @relation(fields: [boardId], references: [id])
  boardId Int
}
